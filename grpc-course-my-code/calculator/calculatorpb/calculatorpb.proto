syntax = "proto3";

package calculatorpb;

option go_package = "./;calculatorpb";

message Operators {
  int32 operatorA = 1;
  int32 operatorB = 2;
}

message CalculatorRequest { Operators operators = 1; }

message CalculatorResult { int64 result = 1; }

message PrimeDecompositionRequest { int64 operator = 1; }

message PrimeDecompositionResult { string result = 1; }

message AverageRequest { int64 operator = 1; }

message AverageResult { float result = 1; }

message FindMaximumRequest { int64 candidate = 1; }

message FindMaximumResult { int64 result = 1; }

message SquareRootRequest { int32 number = 1; }

message SquareRootResponse { double square_root = 2; }

service CalculatorService {
  // Unary
  rpc Add(CalculatorRequest) returns (CalculatorResult) {};

  // Stream server
  rpc PrimeDecomposition(PrimeDecompositionRequest)
      returns (stream PrimeDecompositionResult) {};

  // Client server
  rpc Average(stream AverageRequest) returns (AverageResult) {};

  // Client server
  rpc FindMaximum(stream FindMaximumRequest)
      returns (stream FindMaximumResult) {};

  // Error Handling
  // this rpc will throw an exception if send number is negative
  // the error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}